{%raw%}
# ---- Base Alpine Image ----
FROM node:lts-alpine3.17 AS base
WORKDIR /usr/local/app

# ---- Install & Cache js Dependencies ----
FROM base AS dependencies

COPY package.json .
COPY yarn.lock .
# install node packages

RUN --mount=type=cache,target=/root/.yarn \
    yarn install

# build server and client parts
FROM dependencies as builder
COPY . .
ARG environ
RUN if [[ ${environ} == prod ]] ;\
        then yarn build-prod && yarn build-ssr-prod;\
        else yarn build && yarn build-ssr;\
        fi

# ---- Release Image with Builded angular app ----
FROM node:lts-alpine3.17
WORKDIR /home/app
RUN apk add libcrypto3~=3.0.8 libssl3~=3.0.8
COPY --chown=node:node --from=builder /usr/local/app/dist /home/app/dist
USER node

{%endraw%}
ENTRYPOINT [ "node", "dist/{{project_name}}/server/main.js" ]
