{%raw%}
# ---- Base Alpine Image ----
FROM alpine:latest AS base

RUN apk add --no-cache --update nodejs npm
RUN npm install -g @angular/cli
WORKDIR /usr/local/app

# ---- Install & Cache js Dependencies ----
FROM base AS dependencies

COPY package.json .
COPY package-lock.json .
# install node packages

RUN --mount=type=cache,target=/usr/src/app/.npm \
    npm set cache /usr/src/app/.npm && \
    npm install --no-audit --progress=false

# build frontend
FROM dependencies as builder

COPY . .
ARG env
ENV ENV_NAME $env

RUN if [[ ${ENV_NAME} == prod ]] ;\
        then ng build --output-path=build ;\
        else ng build --configuration development --output-path=build  ;\
        fi


# ---- Release Image with Builded angular app ----
FROM nginxinc/nginx-unprivileged:alpine
WORKDIR /home/app
COPY --chown=nginx:nginx --from=builder /usr/local/app/build /home/app
{%endraw%}